---
import BaseLayout from '../layouts/BaseLayout.astro';

const title = 'Book';
const description = 'Book';
const permalink = `${Astro.site.href}book`;
---

<BaseLayout title={title} description={description} permalink={permalink} current="book">
  <div class="container">
    <h1>Refactoring at Scale</h1>
    <img class="wraparound-image" src="/assets/refactoring-at-scale.jpeg" alt="Refactoring at Scale cover photo"/>
    <p>ðŸ“š Click <a href="https://www.oreilly.com/library/view/refactoring-at-scale/9781492075523/">here</a> to purchase from O'Reilly.</p>
    <p>
      While there are a number of books about refactoring, most of them deal with the nitty-gritty of improving small bits of code one line at a time. I believe that the most difficult part of a refactor is usually not finding the precise way to improve the code at hand, but rather everything else that needs to happen around it. In fact, I might also go so far as to say that for any large software project, the little things rarely matter; coordinating complex changes is the biggest challenge of all.
    </p>
    <p>
      <i>Refactoring at Scale</i> is my attempt at helping you figure out those difficult pieces. Itâ€™s the culmination of many years of experience carrying out all sorts of refactoring projects of various scales. During my time at Slack, many of the projects Iâ€™ve led have allowed the company to scale dramatically; our product has gone from being able to support companies and communities with 25,000 members to those with a whopping 500,000.
    </p>
    <p>
      The strategies we developed to refactor effectively needed to tolerate explosive organizational growth, with our engineering team growing nearly sixfold during the same period. Successfully planning and executing on a project that affects both a significant portion of your codebase and an increasing number of engineers is no small feat.
    </p>
    <p>
      I hope this book gives you the tools and resources you need to do just that!
    </p>
  </div>
</BaseLayout>

<style>
  @media only screen and (min-width: 40em) {
    .wraparound-image {
      float: none;
      width: 100%;
      margin: 0 auto 2em;
    }
  }

  .wraparound-image {
    float: left;
    width: 50%;
    margin: 0 25px 5px 0;
  }
</style>
